https://ac.nowcoder.com/acm/problem/50038     kotori和糖果 (记忆化dfs)
{
  F[n] : 融合n个糖果所需的最小代价

  n 为奇数  F[n] = F[ n/2 ] + F[ n/2 + 1] + 1;
  n 为偶数  F[n] = F[n/2] * 2
}
#---------------------------------------------------------------------------------------------
https://ac.nowcoder.com/acm/contest/11226/E   禅
{
  一开始我的做法是:
  枚举起始点,但这复杂度是 O(n^2)

  显然复杂度太高了.
  公主的两侧的点的值, 即为dp的初始值.

  左侧：
  dp[i] = max(dp[i+1] - a[i],a[i]+1);

  右侧:
  dp[i] = max(dp[i-1] - a[i],a[i]+1); 
}

#--------------------------------------------------------------------------------------------
https://codeforces.com/contest/1678/problem/C C. Tokitsukaze and Strange Inequality(**)
{
  以 O(n^2) 时间内预处理出来pre数组
  利用pre[][] 数组进行预处理.
  pre[i][j] 表示: 在 1~i 之间, 有几个数小于等于j 
}

#-------------------------------------------------------------------------------------------
https://www.luogu.com.cn/problem/P1311  P1311 [NOIP2011 提高组] 选择客栈
https://www.luogu.com.cn/problem/P6032  (加强版) -- 只能二分过
{
  1. 首先很容易想到O(n^3) 

  2. 我们通过预处理来进行优化。(思路如何预处理,观察数据寻找突破点)

  3. 贪心,二分
}

#-------------------------------------------------------------------------------------------

https://leetcode.cn/problems/count-number-of-ways-to-place-houses/ 简单递推



